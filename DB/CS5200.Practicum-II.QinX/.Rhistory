country_table["Average", y] <- round(mean(country_table[quarters, y]))
}
# Calculate grand totals
country_table["Total", "Total"] <- sum(country_table[quarters, "Total"])
country_table["Average", "Total"] <- round(mean(country_table[quarters, "Total"]))
country_table["Total", "Average"] <- round(mean(country_table["Total", year_names]))
country_table["Average", "Average"] <- round(mean(country_table[quarters, "Average"]))
# Convert to data.frame
df_country <- as.data.frame(country_table)
df_country$Quarter <- rownames(country_table)
# Reorder columns
df_country <- df_country[, c("Quarter", year_names, "Total", "Average")]
# Add country header row
country_header <- data.frame(
Quarter = country,
matrix("", nrow = 1, ncol = ncol(df_country) - 1),
stringsAsFactors = FALSE
)
names(country_header) <- names(df_country)
# Combine
final_table <- rbind(final_table, country_header, df_country)
}
# Clean up row names
rownames(final_table) <- NULL
# Step 5: Print table with proper formatting
tbl <- kbl(
final_table,
caption = "Number of units sold by country and quarter for past three years",
col.names = c("", year_names, "Total", "Average"),
align = c("l", rep("r", length(year_names) + 2)),
format.args = list(big.mark = ","),
escape = FALSE
) %>%
kable_styling("striped", full_width = FALSE, position = "center") %>%
row_spec(which(nchar(final_table$Quarter) > 2),  # Country rows
bold = TRUE,
background = "#f2f2f2",
extra_css = "border-bottom: 1px solid #ddd;") %>%
column_spec(1, bold = TRUE) %>%
collapse_rows(columns = 1, target = 1, valign = "top")
tbl
# Step 1: Get the most recent 3 years
most_recent_years <- dbGetQuery(con, "
SELECT DISTINCT YEAR(date) AS year
FROM fact_sales
ORDER BY YEAR(date) DESC
LIMIT 3;
")
years <- sort(most_recent_years$year)
year_names <- as.character(years)
quarters <- paste0("Q", 1:4)
# Step 2: Query sales data
units_data <- dbGetQuery(con, sprintf("
SELECT
country,
YEAR(date) AS year,
QUARTER(date) AS quarter,
SUM(units_sold) AS units_sold
FROM fact_sales
WHERE YEAR(date) IN (%d, %d, %d)
GROUP BY country, YEAR(date), QUARTER(date)
ORDER BY country, year, quarter;",
years[1], years[2], years[3]
))
# Step 3: Calculate country totals and get top 3
country_totals <- aggregate(units_sold ~ country, data = units_data, sum)
top3_countries <- head(country_totals[order(-country_totals$units_sold), "country"], 3)
# Build final table (top 3 countries)
final_table <- data.frame()
for (country in top3_countries) {
country_table <- matrix(0, nrow = 6, ncol = length(year_names) + 2)
rownames(country_table) <- c(quarters, "Total", "Average")
colnames(country_table) <- c(year_names, "Total", "Average")
# Filter data for this country
cdata <- units_data[units_data$country == country, ]
# Fill in quarterly sales
for (q in 1:4) {
for (y in years) {
val <- cdata$units_sold[cdata$quarter == q & cdata$year == y]
if (length(val) == 1) {
country_table[q, as.character(y)] <- val
}
}
}
# Calculate row totals and averages
for (q in 1:4) {
country_table[q, "Total"] <- sum(country_table[q, year_names])
country_table[q, "Average"] <- round(mean(country_table[q, year_names]))
}
# Calculate column totals and averages
for (y in year_names) {
country_table["Total", y] <- sum(country_table[quarters, y])
country_table["Average", y] <- round(mean(country_table[quarters, y]))
}
# Calculate grand totals
country_table["Total", "Total"] <- sum(country_table[quarters, "Total"])
country_table["Average", "Total"] <- round(mean(country_table[quarters, "Total"]))
country_table["Total", "Average"] <- round(mean(country_table["Total", year_names]))
country_table["Average", "Average"] <- round(mean(country_table[quarters, "Average"]))
# Convert to data.frame
df_country <- as.data.frame(country_table)
df_country$Quarter <- rownames(country_table)
# Reorder columns
df_country <- df_country[, c("Quarter", year_names, "Total", "Average")]
# Add country header row
country_header <- data.frame(
Quarter = country,
matrix("", nrow = 1, ncol = ncol(df_country) - 1),
stringsAsFactors = FALSE
)
names(country_header) <- names(df_country)
# Combine
final_table <- rbind(final_table, country_header, df_country)
}
# Clean up row names
rownames(final_table) <- NULL
# Step 5: Print table with proper formatting
tbl <- kbl(
final_table,
caption = "Number of units sold by country and quarter for past three years",
col.names = c("", year_names, "Total", "Average"),
align = c("l", rep("r", length(year_names) + 2)),
format.args = list(big.mark = ","),
escape = FALSE
) %>%
kable_styling("striped", full_width = FALSE, position = "center") %>%
row_spec(which(nchar(final_table$Quarter) > 2),  # Country rows
bold = TRUE,
background = "#f2f2f2",
extra_css = "border-bottom: 1px solid #ddd;") %>%
column_spec(1, bold = TRUE) %>%
collapse_rows(columns = 1, target = 1, valign = "top")
tbl
# Step 1: Get the most recent 3 years
most_recent_years <- dbGetQuery(con, "
SELECT DISTINCT YEAR(date) AS year
FROM fact_sales
ORDER BY YEAR(date) DESC
LIMIT 3;
")
years <- sort(most_recent_years$year)
year_names <- as.character(years)
quarters <- paste0("Q", 1:4)
# Step 2: Query sales data
units_data <- dbGetQuery(con, sprintf("
SELECT
country,
YEAR(date) AS year,
QUARTER(date) AS quarter,
SUM(units_sold) AS units_sold
FROM fact_sales
WHERE YEAR(date) IN (%d, %d, %d)
GROUP BY country, YEAR(date), QUARTER(date)
ORDER BY country, year, quarter;",
years[1], years[2], years[3]
))
# Step 3: Calculate country totals and get top 3
country_totals <- aggregate(units_sold ~ country, data = units_data, sum)
top3_countries <- head(country_totals[order(-country_totals$units_sold), "country"], 3)
# Build final table (top 3 countries)
final_table <- data.frame()
for (country in top3_countries) {
country_table <- matrix(0, nrow = 6, ncol = length(year_names) + 2)
rownames(country_table) <- c(quarters, "Total", "Average")
colnames(country_table) <- c(year_names, "Total", "Average")
# Filter data for this country
cdata <- units_data[units_data$country == country, ]
# Fill in quarterly sales
for (q in 1:4) {
for (y in years) {
val <- cdata$units_sold[cdata$quarter == q & cdata$year == y]
if (length(val) == 1) {
country_table[q, as.character(y)] <- val
}
}
}
# Calculate row totals and averages
for (q in 1:4) {
country_table[q, "Total"] <- sum(country_table[q, year_names])
country_table[q, "Average"] <- round(mean(country_table[q, year_names]))
}
# Calculate column totals and averages
for (y in year_names) {
country_table["Total", y] <- sum(country_table[quarters, y])
country_table["Average", y] <- round(mean(country_table[quarters, y]))
}
# Calculate grand totals
country_table["Total", "Total"] <- sum(country_table[quarters, "Total"])
country_table["Average", "Total"] <- round(mean(country_table[quarters, "Total"]))
country_table["Total", "Average"] <- round(mean(country_table["Total", year_names]))
country_table["Average", "Average"] <- round(mean(country_table[quarters, "Average"]))
# Convert to data.frame
df_country <- as.data.frame(country_table)
df_country$Quarter <- rownames(country_table)
# Reorder columns
df_country <- df_country[, c("Quarter", year_names, "Total", "Average")]
# Add country header row
country_header <- data.frame(
Quarter = country,
matrix("", nrow = 1, ncol = ncol(df_country) - 1),
stringsAsFactors = FALSE
)
names(country_header) <- names(df_country)
# Combine
final_table <- rbind(final_table, country_header, df_country)
}
# Clean up row names
rownames(final_table) <- NULL
# Step 5: Print table with proper formatting
tbl <- kbl(
final_table,
caption = "Number of units sold by country and quarter for past three years",
col.names = c("", year_names, "Total", "Average"),
align = c("l", rep("r", length(year_names) + 2)),
format.args = list(big.mark = ","),
escape = FALSE
) %>%
kable_styling("striped", full_width = FALSE, position = "center") %>%
row_spec(which(nchar(final_table$Quarter) > 2),  # Country rows
bold = TRUE,
background = "#f2f2f2",
extra_css = "border-bottom: 1px solid #ddd;") %>%
column_spec(1, bold = TRUE) %>%
collapse_rows(columns = 1, target = 1, valign = "top")
tbl
# Step 1: Get date range and peak sales year
sales_range <- dbGetQuery(con, "
SELECT
MIN(YEAR(date)) AS min_year,
MAX(YEAR(date)) AS max_year,
YEAR(date) AS peak_year
FROM fact_sales
GROUP BY YEAR(date)
ORDER BY SUM(units_sold * price_per_unit) DESC
LIMIT 1;
")
# Step 2: Get total revenue for peak year
peak_revenue <- dbGetQuery(con, sprintf("
SELECT
ROUND(SUM(units_sold * price_per_unit)/1000000, 2) AS total_revenue_millions
FROM fact_sales
WHERE YEAR(date) = %d;
", sales_range$peak_year))
# 1. Get the min and max year in the sales data (to fill "between xxxx and xxxx")
year_range <- dbGetQuery(con, "
SELECT MIN(YEAR(date)) AS min_year, MAX(YEAR(date)) AS max_year
FROM fact_sales;
")
min_year <- year_range$min_year
max_year <- year_range$max_year
# 2. Get the year with peak sales and total revenue for that year
peak_year_data <- dbGetQuery(con, "
SELECT YEAR(date) AS year, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY year
ORDER BY total_revenue DESC
LIMIT 1;
")
peak_year <- peak_year_data$year
peak_revenue <- formatC(peak_year_data$total_revenue, format = "d", big.mark = ",")
# 3. Total revenue by media type (music and film)
media_revenue <- dbGetQuery(con, "
SELECT media_type, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY media_type;
")
music_revenue <- formatC(media_revenue$total_revenue[media_revenue$media_type == "Music"], format = "d", big.mark = ",")
film_revenue <- formatC(media_revenue$total_revenue[media_revenue$media_type == "Film"], format = "d", big.mark = ",")
# 4. Sales pattern insights (example: percent contribution of music vs film)
total_revenue_all <- sum(media_revenue$total_revenue)
music_pct <- round(media_revenue$total_revenue[media_revenue$media_type == "Music"] / total_revenue_all * 100, 1)
film_pct <- round(media_revenue$total_revenue[media_revenue$media_type == "Film"] / total_revenue_all * 100, 1)
# 5. Top 3 countries by customer count
top_countries <- dbGetQuery(con, "
SELECT country, COUNT(DISTINCT customer_id) AS customer_count
FROM dim_customer
GROUP BY country
ORDER BY customer_count DESC
LIMIT 3;
")
top_countries_list <- paste(top_countries$country, collapse = ", ")
# 1. Get the min and max year in the sales data (to fill "between xxxx and xxxx")
year_range <- dbGetQuery(con, "
SELECT MIN(YEAR(date)) AS min_year, MAX(YEAR(date)) AS max_year
FROM fact_sales;
")
min_year <- year_range$min_year
max_year <- year_range$max_year
# 2. Get the year with peak sales and total revenue for that year
peak_year_data <- dbGetQuery(con, "
SELECT YEAR(date) AS year, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY year
ORDER BY total_revenue DESC
LIMIT 1;
")
peak_year <- peak_year_data$year
peak_revenue <- formatC(peak_year_data$total_revenue, format = "d", big.mark = ",")
# 3. Total revenue by media type (music and film)
media_revenue <- dbGetQuery(con, "
SELECT media_type, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY media_type;
")
music_revenue <- formatC(media_revenue$total_revenue[media_revenue$media_type == "Music"], format = "d", big.mark = ",")
film_revenue <- formatC(media_revenue$total_revenue[media_revenue$media_type == "Film"], format = "d", big.mark = ",")
# 4. Sales pattern insights (example: percent contribution of music vs film)
total_revenue_all <- sum(media_revenue$total_revenue)
music_pct <- round(media_revenue$total_revenue[media_revenue$media_type == "Music"] / total_revenue_all * 100, 1)
film_pct <- round(media_revenue$total_revenue[media_revenue$media_type == "Film"] / total_revenue_all * 100, 1)
# 5. Top 3 countries by customer count
top_countries <- dbGetQuery(con, "
SELECT country, COUNT(DISTINCT customer_id) AS customer_count
FROM dim_customer
GROUP BY country
ORDER BY customer_count DESC
LIMIT 3;
")
top_countries_list <- paste(top_countries$country, collapse = ", ")
# 1. Get min and max year of sales data
year_range <- dbGetQuery(con, "
SELECT MIN(YEAR(date)) AS min_year, MAX(YEAR(date)) AS max_year
FROM fact_sales;
")
min_year <- year_range$min_year
max_year <- year_range$max_year
# 2. Year with peak sales and total revenue for that year
peak_year_data <- dbGetQuery(con, "
SELECT YEAR(date) AS year, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY year
ORDER BY total_revenue DESC
LIMIT 1;
")
peak_year <- peak_year_data$year
peak_revenue <- formatC(peak_year_data$total_revenue, format = "d", big.mark = ",")
# 3. Total revenue by media_type
media_revenue <- dbGetQuery(con, "
SELECT media_type, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY media_type;
")
music_revenue_val <- media_revenue$total_revenue[media_revenue$media_type == "Music"]
film_revenue_val <- media_revenue$total_revenue[media_revenue$media_type == "Film"]
music_revenue <- formatC(music_revenue_val, format = "d", big.mark = ",")
film_revenue <- formatC(film_revenue_val, format = "d", big.mark = ",")
total_revenue_all <- sum(media_revenue$total_revenue)
music_pct <- round(music_revenue_val / total_revenue_all * 100, 1)
film_pct <- round(film_revenue_val / total_revenue_all * 100, 1)
# 4. Top 3 countries by customer count
top_countries <- dbGetQuery(con, "
SELECT country, COUNT(DISTINCT customer_id) AS customer_count
FROM dim_customer
GROUP BY country
ORDER BY customer_count DESC
LIMIT 3;
")
top_countries_list <- paste(top_countries$country, collapse = ", ")
# 1. Get min and max year of sales data
year_range <- dbGetQuery(con, "
SELECT MIN(YEAR(date)) AS min_year, MAX(YEAR(date)) AS max_year
FROM fact_sales;
")
min_year <- year_range$min_year
max_year <- year_range$max_year
# 2. Year with peak sales and total revenue for that year
peak_year_data <- dbGetQuery(con, "
SELECT YEAR(date) AS year, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY year
ORDER BY total_revenue DESC
LIMIT 1;
")
peak_year <- peak_year_data$year
peak_revenue <- formatC(peak_year_data$total_revenue, format = "d", big.mark = ",")
# 3. Total revenue by media_type
media_revenue <- dbGetQuery(con, "
SELECT media_type, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY media_type;
")
music_revenue_val <- media_revenue$total_revenue[media_revenue$media_type == "Music"]
film_revenue_val <- media_revenue$total_revenue[media_revenue$media_type == "Film"]
music_revenue <- formatC(music_revenue_val, format = "d", big.mark = ",")
film_revenue <- formatC(film_revenue_val, format = "d", big.mark = ",")
print(music_revenue)
total_revenue_all <- sum(media_revenue$total_revenue)
music_pct <- round(music_revenue_val / total_revenue_all * 100, 1)
film_pct <- round(film_revenue_val / total_revenue_all * 100, 1)
# 4. Top 3 countries by customer count
top_countries <- dbGetQuery(con, "
SELECT country, COUNT(DISTINCT customer_id) AS customer_count
FROM dim_customer
GROUP BY country
ORDER BY customer_count DESC
LIMIT 3;
")
top_countries_list <- paste(top_countries$country, collapse = ", ")
# 1. Get min and max year of sales data
year_range <- dbGetQuery(con, "
SELECT MIN(YEAR(date)) AS min_year, MAX(YEAR(date)) AS max_year
FROM fact_sales;
")
min_year <- year_range$min_year
max_year <- year_range$max_year
# 2. Year with peak sales and total revenue for that year
peak_year_data <- dbGetQuery(con, "
SELECT YEAR(date) AS year, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY year
ORDER BY total_revenue DESC
LIMIT 1;
")
peak_year <- peak_year_data$year
peak_revenue <- formatC(peak_year_data$total_revenue, format = "d", big.mark = ",")
# 3. Total revenue by media_type
media_revenue <- dbGetQuery(con, "
SELECT media_type, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY media_type;
")
music_revenue_val <- media_revenue$total_revenue[media_revenue$media_type == "music"]
film_revenue_val <- media_revenue$total_revenue[media_revenue$media_type == "film"]
music_revenue <- formatC(music_revenue_val, format = "d", big.mark = ",")
film_revenue <- formatC(film_revenue_val, format = "d", big.mark = ",")
print(music_revenue)
total_revenue_all <- sum(media_revenue$total_revenue)
music_pct <- round(music_revenue_val / total_revenue_all * 100, 1)
film_pct <- round(film_revenue_val / total_revenue_all * 100, 1)
# 4. Top 3 countries by customer count
top_countries <- dbGetQuery(con, "
SELECT country, COUNT(DISTINCT customer_id) AS customer_count
FROM dim_customer
GROUP BY country
ORDER BY customer_count DESC
LIMIT 3;
")
top_countries_list <- paste(top_countries$country, collapse = ", ")
# Get total revenue per year
yearly_revenue <- dbGetQuery(con, "
SELECT YEAR(date) AS year, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY year
ORDER BY total_revenue DESC;
")
# Get the top revenue year and value
top_year <- yearly_revenue$year[1]
top_revenue <- formatC(yearly_revenue$total_revenue[1], format = "d", big.mark = ",")
# Get revenue by country/year
country_year_revenue <- dbGetQuery(con, "
SELECT country, YEAR(date) AS year, ROUND(SUM(revenue), 0) AS revenue
FROM fact_sales
GROUP BY country, year
ORDER BY revenue DESC;
")
# Most revenue by country/year
top_country_row <- country_year_revenue[1, ]
top_country <- top_country_row$country
top_country_year <- top_country_row$year
top_country_revenue <- formatC(top_country_row$revenue, format = "d", big.mark = ",")
# Second place country
second_country_row <- country_year_revenue[2, ]
second_country <- second_country_row$country
second_country_revenue <- formatC(second_country_row$revenue, format = "d", big.mark = ",")
print(second_country_revenue)
# Extract two most recent years from fact_sales
most_recent_years <- dbGetQuery(con, "
SELECT DISTINCT YEAR(date) AS year
FROM fact_sales
ORDER BY year DESC
LIMIT 2;
")
# Extract and assign years
year1 <- most_recent_years$year[1]
year2 <- most_recent_years$year[2]
# Get total revenue per year
yearly_revenue <- dbGetQuery(con, "
SELECT YEAR(date) AS year, ROUND(SUM(revenue), 0) AS total_revenue
FROM fact_sales
GROUP BY year
ORDER BY total_revenue DESC;
")
# Get the top revenue year and value
top_year <- yearly_revenue$year[1]
top_revenue <- formatC(yearly_revenue$total_revenue[1], format = "d", big.mark = ",")
# Get revenue by country/year
country_year_revenue <- dbGetQuery(con, "
SELECT country, YEAR(date) AS year, ROUND(SUM(revenue), 0) AS revenue
FROM fact_sales
GROUP BY country, year
ORDER BY revenue DESC;
")
# Most revenue by country/year
top_country_row <- country_year_revenue[1, ]
top_country <- top_country_row$country
top_country_year <- top_country_row$year
top_country_revenue <- formatC(top_country_row$revenue, format = "d", big.mark = ",")
# Second place country
second_country_row <- country_year_revenue[2, ]
second_country <- second_country_row$country
second_country_revenue <- formatC(second_country_row$revenue, format = "d", big.mark = ",")
# Extract two most recent years from fact_sales
most_recent_years <- dbGetQuery(con, "
SELECT DISTINCT YEAR(date) AS year
FROM fact_sales
ORDER BY year DESC
LIMIT 2;
")
# Extract and assign years
year1 <- most_recent_years$year[1]
year2 <- most_recent_years$year[2]
source("~/Desktop/DB/CS5200.Practicum-II.QinX/loadAnalyticsDB.PractII.QinX.R")
