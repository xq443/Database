install.packages("RSQLite")
dbListFields(conn, "coffees")
install.packages("RSQLite")
library(RSQLite)
dbfile <- "CoffeeDB.sqlitedb"
conn <- dbConnect(SQLite(), dbfile)
dbListTables(conn)
dbListFields(conn, "coffees")
dbExecute(conn, "
CREATE TABLE coffees (
id INTEGER PRIMARY KEY,
coffee_name TEXT,
price REAL
);
")
dbListTables(conn)
dbListFields(conn, "coffees")
dbExecute(conn, "
INSERT INTO coffees (coffee_name, price) VALUES
('Espresso', 2.5),
('Latte', 3.5),
('Cappuccino', 3.0);
")
dbListFields(conn, "coffees")
dbGetQuery(conn, "SELECT * FROM coffees")
sql <- "SELECT coffee_name AS coffee, price
FROM coffees
WHERE price > 8;"
rs <- dbGetQuery(conn, sql)
print(rs)
sql <- "SELECT coffee_name AS coffee, price
FROM coffees
WHERE price > 2;"
rs <- dbGetQuery(conn, sql)
print(rs)
p <- 2
sql <- "select coffee_name as coffee, price
from coffees
where price > "
sql <- paste0(sql, p)
rs <- dbGetQuery(conn, sql)
print(rs)
minP <- 1
maxP <- 3
sql <- "select coffee_name as coffee, price
from coffees
where price between ? and ?"
rs <- dbSendQuery(conn, sql, params = list(minP, maxP))
minP <- 1
maxP <- 3
sql <- "select coffee_name as coffee, price
from coffees
where price between ? and ?"
rs <- dbSendQuery(conn, sql, params = list(minP, maxP))
dbFetch(rs)
minP <- 1
maxP <- 3
sql <- "select coffee_name as coffee, price
from coffees
where price between ? and ?"
rs <- dbSendQuery(conn, sql, params = list(minP, maxP))
dbFetch(rs)
print(rs)
rs <- dbReadTable(conn, "coffees")
head(rs, 3)
rs <- dbReadTable(conn, "coffees")
# let's write all of the data to an archive table, but let's delete the old
# table first
dbRemoveTable(conn, "arx_coffees", fail_if_missing = F)
dbWriteTable(conn, "arx_coffees", rs, append = T)
# and read it back to see if it worked
rs <- dbReadTable(conn, "arx_coffees")
tail(rs, 3)
rs <- dbReadTable(conn, "coffees")
# let's write all of the data to an archive table, but let's delete the old
# table first
dbRemoveTable(conn, "arx_coffees", fail_if_missing = F)
dbWriteTable(conn, "arx_coffees", rs, append = T)
# and read it back to see if it worked
rs <- dbReadTable(conn, "arx_coffees")
tail(rs, 1)
# Load necessary library
library(RSQLite)
# Create a new SQLite database
db <- dbConnect(SQLite(), dbname = "sample.db")
# Create a table named 'customers'
dbExecute(db, "
CREATE TABLE customers (
cid INTEGER PRIMARY KEY,
name TEXT,
email TEXT
)
")
# Insert 3 rows of synthetic data into the 'customers' table
dbExecute(db, "INSERT INTO customers (cid, name, email) VALUES (1, 'Alice', 'alice@example.com')")
dbExecute(db, "INSERT INTO customers (cid, name, email) VALUES (2, 'Bob', 'bob@example.com')")
dbExecute(db, "INSERT INTO customers (cid, name, email) VALUES (3, 'Charlie', 'charlie@example.com')")
# Retrieve all rows in the 'customers' table and display them
customers <- dbGetQuery(db, "SELECT * FROM customers")
print(customers)
# Close the connection to the database
dbDisconnect(db)
plot(cars)
library(RSQLite)
fpath = "/Users/cathyqin/Desktop/DB/"
dbfile = "committeeDB.sqlite"
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath, dbfile))
